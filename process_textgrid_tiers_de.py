# -*- coding: utf-8 -*-
"""
Created on Mon Feb 21 13:35:28 2022

@author: Roy Alderton

This script takes a folder of Praat TextGrids generated by the 'B2P -> MAUS -> 
PHO2SYLL' pipeline in BAS Web Services for German and does the following:
    
    1. Renames the tiers with more intuitive names.
    2. Removes two unnecessary tiers.
    3. Adds a new tier called 'PHRASE' with three intervals. The first and
    third interval contain no text, while the second interval contains the
    text 'phrase'. Its boundaries correspond to the beginning and end of the
    region of interest in the stimuli. In the case of German, this is the
    beginning of the [e:] in 'Kleo' and the end of the target nasal sound or
    its oral counterpart.
    4. Over-writes some specific interval labels with more helpful text. Unlike
    for French, the transcripts produced by MAUS for German contain very few
    errors, so this only consitutes a few lines of code.
    
The script should be saved in a folder with a sub-folder called 'TextGrids',
where the TextGrids to be processed should be located. You can then use the
P_text-grid-reviewermitZoom.praat Praat script to view (and edit) the TextGrids
and their corresponding WAV files at the same time.
 
Warning: the script will over-write the original TextGrids!

The script should be run in the command line by navigating to the correct
folder and entering a command in the following format:
    
    python process_textgrid_tiers_de.py
    
If using Linux, you may need to replace 'python' with 'python3'.

You may not be able to run this file from the IPS server, in which case,
just copy everything to your computer and run it locally.

You may need to install the textgrids library if it isn't already on your
computer. You can do this by entering the following into the command prompt:
    
    pip install praat-textgrids
    
There is currently a bug in the library's set-up files that causes some Windows
computers to fail to install the library correctly via pip. If this occurs,
download the library as a zip file from the project's GitHub page and then 
extract it manually to the relevant folder in your computer's Python 
installation. See links below for details.

https://github.com/Legisign/Praat-textgrids
https://youtu.be/DKR0VYSOqLc

"""

import os
import textgrids

# Specify folder path where the TextGrids are located
path = "TextGrids/"
dir_list = os.listdir(path)

# Get a list of TextGrid files in the folder
tg_list = [file for file in dir_list if 'practice' not in file and file.endswith('.TextGrid')]

# For each TextGrid file in the list...
for file in tg_list:
    
    # Load the file as a TextGrid in Python
    tg = textgrids.TextGrid(path + file)
    
    # Delete the unneeded tiers
    del tg['KAN-MAU']
    del tg['KAS-MAU']
    
    # Rename the word tier
    tg['WORD'] = tg.pop('ORT-MAU')
       
    # Get the end time of the final interval on the sound (MAU) tier.
    # This is so that the end time of the new phrase tier can be specified 
    # correctly.
    file_end = tg['MAU'][-1].xmax
    
    # Get the start time of [e:] intervals on the sound (MAU) tier.
    # The first of these (corresponding to the [e:] in 'Kleo' will be used as 
    # the start of the 'phrase' interval on the phrase tier.
    e_start_time = []
    for interval in tg['MAU']:
        if interval.text == 'e:':
            e_start_time.append(interval.xmin)   
    
    # Get the end time of the target nasal / oral interval on the sound (MAU) 
    # tier.
    # This will be used as the end of the 'phrase' interval on the phrase tier.
    nasals_orals = ['m', 'n', 'N', 'p', 't', 'k', 'x']
    nasal_oral_end_time = []
    for interval in tg['MAU']:
        if interval.text in nasals_orals:
            nasal_oral_end_time.append(interval.xmax)    
    
    # Specify the three intervals for the new phrase tier
    
    # The first item (index [0]) in e_start_time is used, i.e. the [e:] in
    # 'Kleo'. This is because some items have another [e:] later (e.g. 'Meter').
    
    # The second item (index [1]) in nasal_oral_end_time is used.
    # This is because all items have a [k] in Kleo, then the target, then 
    # potentially more of the same sound (e.g. another [t] in 'Tat'), then the
    # [m] in 'zweimal'. However, these other sounds always come after our 
    # target sound in the region of interest, so index [1] is reliable.
    
    interval_1 = textgrids.Interval(text = '', xmin = 0.0, xmax = e_start_time[0])
    interval_2 = textgrids.Interval(text = 'phrase', xmin = e_start_time[0], xmax = nasal_oral_end_time[1])
    interval_3 = textgrids.Interval(text = '', xmin = nasal_oral_end_time[1], xmax = file_end)
    
    # Specify the new phrase tier with the three intervals
    tg['PHRASE'] = textgrids.Tier(data = [interval_1, interval_2, interval_3])
    
    # Over-write 'dZ a k' with 'j U k' on the syllable tier
    for interval in tg['MAS']:
        if interval.text == 'dZ a k':
            interval.text = 'j U k'
            
    # Over-write ['dZ', 'a', 'k'] with ['j', 'U', 'k'] on the sound tier    
    for count, interval in enumerate(tg['MAU']):
        if interval.text == 'a' and tg['MAU'][count - 1].text == 'dZ':
            interval.text = 'U'
    for interval in tg['MAU']:
        if interval.text == 'dZ':
            interval.text = 'j'
            
    # Over-write empty labels on the word tier with '<p:>'
    for interval in tg['WORD']:
        if interval.text == '':
            interval.text = '<p:>'
    
    # Rename the sound and syllable tiers
    # This has to be done last to preserve the tier order.
    tg['SOUND'] = tg.pop('MAU')
    tg['SYLLABLE'] = tg.pop('MAS')
    
    # Write the new TextGrid in the TextGrids folder (over-writing the old file)    
    tg.write(path + file)
    
    # Print a message to check that the file has been successfully processed
    print('Successfully processed {}!'.format(file))