# -*- coding: utf-8 -*-
"""
Created on Wed Jan 19 16:26:02 2022

@author: Roy Alderton

This script takes a Praat TextGrid and relabels its interval tiers according to
the item numbers of its corresponding mono WAV files.

This script is designed to modify the labels of TextGrids for long stereo files 
recorded for each block in the nasalance experiment (e.g. 0012_nasalance_1). 
These TextGrids are generated by Praat's 'Annotate to TextGrid (silences)...'
function. The script assumes the following:
    
    1. The TextGrid contains a 'silence' tier which alternates between blank
    intervals corresponding to silence / unneeded noise, and intervals labelled
    'speech' corresponding to all (and only) the items in the block.
    
    2. The TextGrid's file name contains '_x', where x is the block number.
    
    3. Within the same folder as the TextGrid is a sub-folder called 'RECS_mono'
    which contains mono WAV files recorded by the main microphone, not the
    nasometer. The order of these WAV files' 'date modified' attribute
    corresponds to the order in which the items were recorded.
    
    4. Each WAV file name contains '_x_', where x is the block number.
    
    5. The TextGrid and WAV file names do not use '_x_' to refer to anything
    else other than the block number. Note that x is only one digit.
    
The script will produce a new TextGrid file with the same name as the original
TextGrid but with '_labelled' appended to the end.

The script should be run in the command line by navigating to the correct
folder and entering a command in the following format:
    
    python change_textgrid_labels.py [TextGrid_file]
    
An example for German speaker 12, block 1 in Windows is shown below:
    
    python change_textgrid_labels.py 0012_nasalance_1.TextGrid
    
If using Linux, you may need to replace 'python' with 'python3'.

You may not be able to run this file from the IPS server, in which case,
just copy everything to your computer and run it locally.

You may need to install the textgrids library if it isn't already on your
computer. You can do this by typing the following into the command prompt:
    
    pip install textgrids
"""

import sys
import os
import re
import textgrids

textgrid_name = sys.argv[1]

# specify textgrid_name for testing
#textgrid_name = '0012_nasalance_3_copy.TextGrid'

# Define the name for the new TextGrid file to be created
new_textgrid_name = textgrid_name[:-9] + '_labelled.TextGrid'

# Get the name of the directory containing the WAV files
dir_name = "RECS_mono/"

# Get the block ID (as '_1_', '_2_' or '_3_') from the TextGrid file name
block_id = re.search(r'_\d', textgrid_name).group() + '_'
print('block_id =', block_id)

# Get list of all files in dir_name
list_of_files = filter(lambda x: os.path.isfile(os.path.join(dir_name, x)), os.listdir(dir_name))

# Sort list of files based on last modification time in ascending order (earliest first)
list_of_files = sorted(list_of_files, key = lambda x: os.path.getmtime(os.path.join(dir_name, x)))
  
# Remove practice and instruction items from the list
# Also remove the '.wav' extension from the file names
wav_list = [i[:-4] for i in list_of_files if 'practice' not in i and 'instr' not in i]

# Remove items from the list that aren't from the same block as the TextGrid
block_wav_list = [i for i in wav_list if block_id in i]

# Duplicate and merge block_wav_list so that each list item appears twice consecutively
# E.g. [list1-item1, list2-item1, list1-item2, list2-item2], etc
# This is required because this list needs to be the same length as the number of intervals in the TextGrid, which always alternates between speech and silence
# The TextGrid cannot be filtered as far as I can work out
block_wav_list_doubled = [None] * (len(block_wav_list) + len(block_wav_list))
block_wav_list_doubled[::2] = block_wav_list
block_wav_list_doubled[1::2] = block_wav_list

# Load TextGrid
tg = textgrids.TextGrid(textgrid_name)

# Overwrite the 'speech' text in each interval on the 'silences' tier
for file_name, interval in zip(block_wav_list_doubled, tg['silences']):
    if interval.text == 'speech':
        interval.text = file_name

# Print the new interval text to check whether it's done it correctly
for interval in tg['silences']:
    if interval.text != '':
        print(interval.text)

# Save the changes as a new TextGrid file
tg.write(new_textgrid_name)